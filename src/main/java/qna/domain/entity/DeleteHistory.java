package qna.domain.entity;

import lombok.*;

import javax.persistence.*;
import java.time.LocalDateTime;

/**
 * create table delete_history
 * (
 *     id            bigint generated by default as identity,
 *     content_id    bigint,
 *     content_type  varchar(255),
 *     create_date   timestamp,
 *     deleted_by_id bigint,
 *     primary key (id)
 * )
 */
@NoArgsConstructor
@Entity
@Getter(AccessLevel.PACKAGE)
@EqualsAndHashCode(of={"id"})
public class DeleteHistory {

    @Getter
    @Id @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private Long contentId;

    @Enumerated(EnumType.STRING)
    private ContentType contentType;

    private LocalDateTime createDate;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="deleted_by_id")
    private User user;

    private DeleteHistory(ContentType contentType, Long contentId, User user, LocalDateTime createDate) {
        this.contentId = contentId;
        this.contentType = contentType;
        this.user = user;
        this.createDate = createDate;
    }

    enum ContentType {
        ANSWER("답변"), QUESTION("질문");

        private final String remark;

        ContentType(String remark) {
            this.remark = remark;
        }

        protected DeleteHistory getDeleteHistory(Long contentId, User user) {
            return new DeleteHistory(this, contentId, user, LocalDateTime.now());
        }

        @Override
        public String toString() {
            return remark;
        }
    }
}
