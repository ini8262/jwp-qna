package qna.domain.entity;

import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.time.LocalDateTime;

/**
 * create table delete_history
 * (
 *     id            bigint generated by default as identity,
 *     content_id    bigint,
 *     content_type  varchar(255),
 *     create_date   timestamp,
 *     deleted_by_id bigint,
 *     primary key (id)
 * )
 */
@Getter
@NoArgsConstructor
@Entity
@EqualsAndHashCode(of={"id", "contentType", "contentId", "deletedById"})
public class DeleteHistory {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    //TODO
    private Long contentId;

    @Enumerated(EnumType.STRING)
    private ContentType contentType;

    private LocalDateTime createDate;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="deleted_by_id")
    private User user;


    @Builder
    public DeleteHistory(ContentType contentType, Long contentId, User user, LocalDateTime createDate) {
        this.contentId = contentId;
        this.contentType = contentType;
        this.user = user;
        this.createDate = createDate;
    }

    public enum ContentType {
        ANSWER, QUESTION
    }
}
